/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Bodega;

/**
 *
 * @author Daniel
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class EliminarPanel extends javax.swing.JPanel {

    /**
     * Creates new form EliminarPanel
     */
    public EliminarPanel() {
       initComponents();
        inicializarTabla(); // Configurar el modelo de la tabla
        cargarProductosEnComboBox(); // Cargar productos en el ComboBox
    }
    // Método para inicializar el modelo de la tabla
     // Método para inicializar el modelo de la tabla
    private void inicializarTabla() {
        DefaultTableModel modeloTabla = new DefaultTableModel(
            new Object[][]{}, // Datos iniciales vacíos
            new String[]{"Nombre"} // Nombres de las columnas
        );
        jTable1.setModel(modeloTabla); // Asignar el modelo a la tabla
    }

    // Método para cargar productos en el ComboBox
    private void cargarProductosEnComboBox() {
        String url = "jdbc:postgresql://localhost:5432/Bodegas";
        String user = "postgres";
        String password = "20213123Juan";

        String sql = "SELECT nombre FROM productos";

        try (Connection conn = DriverManager.getConnection(url, user, password);
             PreparedStatement ps = conn.prepareStatement(sql);
             ResultSet rs = ps.executeQuery()) {

            // Limpiar el ComboBox antes de cargar datos
            nombreProductoCB.removeAllItems();

            while (rs.next()) {
                String nombre = rs.getString("nombre");
                // Agregar datos al ComboBox
                nombreProductoCB.addItem(nombre);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar los productos.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Método para eliminar el producto seleccionado
    private void eliminarProducto() {
        String productoSeleccionado = (String) nombreProductoCB.getSelectedItem();

        if (productoSeleccionado == null || productoSeleccionado.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Seleccione un producto para eliminar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String url = "jdbc:postgresql://localhost:5432/Bodegas";
        String user = "postgres";
        String password = "20213123Juan";

        String sql = "DELETE FROM productos WHERE nombre = ?";

        try (Connection conn = DriverManager.getConnection(url, user, password);
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, productoSeleccionado);

            int filasAfectadas = ps.executeUpdate();

            if (filasAfectadas > 0) {
                JOptionPane.showMessageDialog(this, "Producto eliminado exitosamente.");
                cargarProductosEnComboBox(); // Actualizar el ComboBox
                actualizarTabla(productoSeleccionado); // Actualizar la tabla
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el producto a eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al eliminar el producto.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Método para actualizar la tabla de productos eliminados
    private void actualizarTabla(String nombre) {
        DefaultTableModel modeloTabla = (DefaultTableModel) jTable1.getModel();
        modeloTabla.addRow(new Object[]{nombre});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lateralAz = new javax.swing.JPanel();
        icono = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        lblEliminarProductos = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        nombreProductoCB = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        eliminar = new javax.swing.JButton();

        setBackground(new java.awt.Color(236, 236, 236));
        setMinimumSize(new java.awt.Dimension(760, 490));
        setPreferredSize(new java.awt.Dimension(740, 480));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lateralAz.setBackground(new java.awt.Color(64, 119, 119));
        lateralAz.setPreferredSize(new java.awt.Dimension(356, 400));

        icono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bodegaManu.png"))); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Productos Eliminados"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel4.setFont(new java.awt.Font("Ebrima", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("BODEGA MANUELITA");

        javax.swing.GroupLayout lateralAzLayout = new javax.swing.GroupLayout(lateralAz);
        lateralAz.setLayout(lateralAzLayout);
        lateralAzLayout.setHorizontalGroup(
            lateralAzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lateralAzLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(lateralAzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lateralAzLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(70, 70, 70))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lateralAzLayout.createSequentialGroup()
                        .addComponent(icono)
                        .addGap(116, 116, 116))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lateralAzLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        lateralAzLayout.setVerticalGroup(
            lateralAzLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lateralAzLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(icono)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );

        add(lateralAz, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 330, 490));

        lblEliminarProductos.setFont(new java.awt.Font("Ebrima", 0, 24)); // NOI18N
        lblEliminarProductos.setText("ELIMINAR PRODUCTOS");
        add(lblEliminarProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, -1, -1));

        jLabel2.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel2.setText("Selección Producto");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));

        jLabel1.setFont(new java.awt.Font("Ebrima", 0, 14)); // NOI18N
        jLabel1.setText("Nombre");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, -1));

        nombreProductoCB.setFont(new java.awt.Font("Ebrima", 0, 12)); // NOI18N
        nombreProductoCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(nombreProductoCB, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 170, -1));

        jSeparator1.setForeground(new java.awt.Color(0, 102, 102));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 330, 10));

        eliminar.setBackground(new java.awt.Color(64, 119, 119));
        eliminar.setFont(new java.awt.Font("Ebrima", 0, 12)); // NOI18N
        eliminar.setForeground(new java.awt.Color(255, 255, 255));
        eliminar.setText("ELIMINAR");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        add(eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        eliminarProducto();
    }//GEN-LAST:event_eliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eliminar;
    private javax.swing.JLabel icono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel lateralAz;
    private javax.swing.JLabel lblEliminarProductos;
    private javax.swing.JComboBox<String> nombreProductoCB;
    // End of variables declaration//GEN-END:variables
}
